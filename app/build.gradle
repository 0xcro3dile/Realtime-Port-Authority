apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.github.ben-manes.versions'

// version dependnecies should be added via ../build.gradle -> `region versions for dependencies`
// I did this since we can have multiple projects and they should all share the same versions
// only exception to this are the published versions of each code specific to the project

android.buildTypes.each { type ->
    type.buildConfigField 'String', 'PAT_API_KEY', keys.truetime.release // variable defined in `../build.gradle`
}

android {

    compileSdkVersion versions.android.targetSdk
    buildToolsVersion versions.android.buildTools
    defaultConfig {
        applicationId "rectangledbmi.com.pittsburghrealtimetracker"
        minSdkVersion versions.android.minSdk
        targetSdkVersion versions.android.targetSdk
        versionCode 80
        versionName "8.0.0b3"
    }
    lintOptions {
        warning 'InvalidPackage'
    }
    buildTypes {

        debug {
            resValue "string", "google_maps_key", keys.google.maps.debug // variable defined in `../build.gradle`
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "google_maps_key", keys.google.maps.release // variable defined in `../build.gradle`
        }
    }
    compileOptions {
        sourceCompatibility versions.java.target
        targetCompatibility versions.java.target
    }

}

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(path: ':pat-static')

    repositories {
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }

     //google play services maps
    compile "com.google.android.gms:play-services-maps:${versions.google.play}"
    //google play services location and places
    compile "com.google.android.gms:play-services-location:${versions.google.play}"
    compile "com.google.android.gms:play-services-places:${versions.google.play}"

    compile "com.android.support:support-v4:${versions.android.support}"
    compile "com.android.support:design:${versions.android.support}"
    compile "com.android.support:appcompat-v7:${versions.android.support}"
    compile "com.android.support:recyclerview-v7:${versions.android.support}"

    compile "com.android.support:mediarouter-v7:${versions.android.support}"

    //3rd party android libraries
    compile "io.reactivex:rxandroid:${versions.rx.java}"
    compile "io.reactivex:rxjava:${versions.rx.java}"
    compile "com.github.pwittchen:reactivenetwork:${versions.rx.network}"

    compile "com.squareup.retrofit2:retrofit:${versions.square.retrofit}"
    compile "com.squareup.retrofit2:converter-gson:${versions.square.retrofit}"
    compile "com.squareup.retrofit2:adapter-rxjava:${versions.square.retrofit}"
    compile "org.glassfish:javax.annotation:${versions.java.annotation}"
    compile "com.squareup.okhttp3:okhttp:${versions.square.okHttp}"

    compile "com.jakewharton.timber:timber:${versions.square.timber}"

    debugCompile "com.squareup.leakcanary:leakcanary-android:${versions.square.leakCanary}"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${versions.square.leakCanary}"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:${versions.square.leakCanary}"

    retrolambdaConfig "net.orfjackal.retrolambda:retrolambda:${versions.retrolambda.config}"

    testCompile "junit:junit:${versions.test.junit}"
    testCompile "org.mockito:mockito-core:${versions.test.mockito}"
}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        // use some java 8 syntax in the project
        classpath "me.tatarka:gradle-retrolambda:${versions.retrolambda.plugin}"
        // check for updates of 3rd party libs:
        // `./gradlew dependencyUpdates -Drevision=release`
        classpath "com.github.ben-manes:gradle-versions-plugin:${versions.gradleVersions}"
    }
}
